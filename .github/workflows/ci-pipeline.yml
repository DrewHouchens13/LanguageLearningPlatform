name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Job 1: AI Code Review for Pull Requests (10pts)
  # This job will be skipped if OPENAI_API_KEY is not set
  ai-code-review:
    name: AI Code Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && secrets.OPENAI_API_KEY != ''
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        
      - name: AI Code Review with OpenAI
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4
          PROMPT: |
            Please review the following code changes and provide feedback on:
            1. Code quality and best practices
            2. Potential bugs or issues
            3. Security concerns
            4. Performance considerations
            5. Suggestions for improvement
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000

  # Job 1b: Placeholder for AI Code Review when key is missing
  ai-code-review-pending:
    name: AI Code Review (Pending API Key)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && secrets.OPENAI_API_KEY == ''
    
    steps:
      - name: Waiting for OpenAI API Key
        run: |
          echo "‚è≥ AI Code Review is configured but waiting for OPENAI_API_KEY"
          echo "üìù To enable AI Code Review:"
          echo "   1. Get OpenAI API key from instructor"
          echo "   2. Add to GitHub Secrets as OPENAI_API_KEY"
          echo "   3. AI Code Review will automatically activate"
          echo ""
          echo "‚úÖ All other CI checks are running successfully!"

  # Job 2: Unit Tests and Coverage (10pts total: 5pts tests + 5pts coverage)
  test-and-coverage:
    name: Unit Tests & Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run unit tests with coverage
        run: npm run test:coverage
        continue-on-error: false
      
      - name: Display coverage report in console
        run: |
          echo "========================================="
          echo "         TEST COVERAGE REPORT"
          echo "========================================="
          if [ -f coverage/lcov-report/index.html ]; then
            echo "Coverage report generated successfully"
            # Display coverage summary
            if [ -f coverage/coverage-summary.json ]; then
              cat coverage/coverage-summary.json | jq -r '
                .total | 
                "Lines: \(.lines.pct)%\n" +
                "Statements: \(.statements.pct)%\n" +
                "Functions: \(.functions.pct)%\n" +
                "Branches: \(.branches.pct)%"
              '
            fi
          else
            echo "No coverage report found"
          fi
          echo "========================================="
      
      - name: Generate coverage badge
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
      
      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: ./coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

  # Job 3: Code Quality Checks
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
      
      - name: Run Prettier check
        run: npm run format:check
        continue-on-error: true

  # Job 4: Build verification
  build:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/
